/*

plugins {
    id 'com.android.application' version '7.3.0' apply false
    id 'com.android.library' version '7.3.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.20' apply false
}
*/

buildscript {

    ext {
        //agp_version = '7.3.0'
        //agp_version = '8.0.0'
        ///agp_version = '8.1.1'
        //agp_version = '8.6.0'
        agp_version = '8.7.1'
    }
    ///ext.kotlin_version = '1.7.10'
    ///ext.kotlin_version = '1.9.0'
    ///ext.kotlin_version = '1.9.20'
    ///ext.kotlin_version = '1.9.23'
    ext.kotlin_version = '2.0.21'


    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        ///classpath 'com.android.tools.build:gradle:7.3.0'
        classpath 'com.android.tools.build:gradle:8.7.1'
        //classpath "com.android.tools.build:gradle:$agp_version"

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        ///classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.google.gms:google-services:4.4.1' //working in lower version(FirebaseApp is not initialized)
        ///classpath 'com.google.gms:google-services:4.4.0' //error - FirebaseApp is not initialized

        //for firebase crashlytics(show crash in firebase)
        //classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.7'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
        //classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.2'

        //for firebase performance monitoring
        //classpath 'com.google.firebase.firebase-perf:1.4.2'
        //or
        //id("com.google.firebase.firebase-perf") version "1.4.2" apply false
        classpath 'com.google.firebase:perf-plugin:1.4.2'


    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url "https://maven.google.com"
            //Google's Maven repository
        }

    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}





